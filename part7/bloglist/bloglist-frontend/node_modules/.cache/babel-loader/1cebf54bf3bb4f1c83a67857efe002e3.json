{"ast":null,"code":"/* eslint-disable no-debugger */\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setNotification } from '../reducers/notificationReducer';\nconst baseUrl = '/api/blogs';\nconst dispatch = useDispatch();\n\nconst getConfig = () => {\n  return {\n    headers: {\n      Authorization: `bearer ${JSON.parse(localStorage.getItem('loggedInUser')).token}`\n    }\n  };\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async blogObject => {\n  // debugger\n  // console.log(baseUrl)\n  // console.log('blogObject', blogObject)\n  // console.log('Token', token)\n  // console.log('config', config);\n  try {\n    const response = await axios.post(baseUrl, blogObject, getConfig());\n    return response.data;\n  } catch (error) {\n    dispatch(setNotification({\n      message: `blog not added - ${error.response.data.error}`,\n      class: 'error'\n    }));\n  }\n};\n\nconst deleteBlog = async blogId => {\n  const url = `${baseUrl}/${blogId}`;\n  console.log(url);\n  const response = await axios.delete(url, getConfig());\n  return response.data;\n}; // const update = async blogObject => {\n//   // debugger\n//   const url = `${baseUrl}/${blogObject.id}`\n//   console.log(url)\n//   const config = {\n//     headers: { Authorization: token }\n//   }\n//   const response = await axios.put(url, blogObject, config)\n//   console.log(response.data)\n//   return response.data\n// }\n\n\nconst update = blog => {\n  console.log(`${baseUrl}/${blog.id}`, blog);\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig());\n  return request.then(response => response.data);\n};\n\nconst createComment = async comment => {\n  console.log('services', comment);\n  const url = `${baseUrl}/${comment.blogId}/comments`;\n  const request = axios.post(url, comment);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteBlog,\n  createComment\n};","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/services/blogs.js"],"names":["axios","useDispatch","setNotification","baseUrl","dispatch","getConfig","headers","Authorization","JSON","parse","localStorage","getItem","token","getAll","response","get","data","create","blogObject","post","error","message","class","deleteBlog","blogId","url","console","log","delete","update","blog","id","request","put","then","createComment","comment"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,MAAMC,OAAO,GAAG,YAAhB;AACA,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AAEA,MAAMI,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDC,KAAM;AAAlF;AADJ,GAAP;AAGD,CAJD;;AAMA,MAAMC,MAAM,GAAG,YAAY;AACzB,QAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUZ,OAAV,CAAvB;AACA,SAAOW,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,UAAN,IAAoB;AACjC;AACA;AACA;AACA;AAEA;AACA,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMd,KAAK,CAACmB,IAAN,CAAWhB,OAAX,EAAoBe,UAApB,EAAgCb,SAAS,EAAzC,CAAvB;AACA,WAAOS,QAAQ,CAACE,IAAhB;AACD,GAHD,CAGE,OAAMI,KAAN,EAAa;AACbhB,IAAAA,QAAQ,CAACF,eAAe,CAAC;AAAEmB,MAAAA,OAAO,EAAG,oBAAmBD,KAAK,CAACN,QAAN,CAAeE,IAAf,CAAoBI,KAAM,EAAzD;AAA4DE,MAAAA,KAAK,EAAE;AAAnE,KAAD,CAAhB,CAAR;AACD;AACF,CAbD;;AAeA,MAAMC,UAAU,GAAG,MAAMC,MAAN,IAAgB;AACjC,QAAMC,GAAG,GAAI,GAAEtB,OAAQ,IAAGqB,MAAO,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAMX,QAAQ,GAAG,MAAMd,KAAK,CAAC4B,MAAN,CAAaH,GAAb,EAAkBpB,SAAS,EAA3B,CAAvB;AACA,SAAOS,QAAQ,CAACE,IAAhB;AACD,CALD,C,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMa,MAAM,GAAIC,IAAD,IAAU;AACvBJ,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAExB,OAAQ,IAAG2B,IAAI,CAACC,EAAG,EAAlC,EAAqCD,IAArC;AACA,QAAME,OAAO,GAAGhC,KAAK,CAACiC,GAAN,CAAW,GAAE9B,OAAQ,IAAG2B,IAAI,CAACC,EAAG,EAAhC,EAAmCD,IAAnC,EAAyCzB,SAAS,EAAlD,CAAhB;AACA,SAAO2B,OAAO,CAACE,IAAR,CAAapB,QAAQ,IAAIA,QAAQ,CAACE,IAAlC,CAAP;AACD,CAJD;;AAMA,MAAMmB,aAAa,GAAG,MAAMC,OAAN,IAAiB;AACrCV,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBS,OAAxB;AACA,QAAMX,GAAG,GAAI,GAAEtB,OAAQ,IAAGiC,OAAO,CAACZ,MAAO,WAAzC;AAEA,QAAMQ,OAAO,GAAGhC,KAAK,CAACmB,IAAN,CAAWM,GAAX,EAAgBW,OAAhB,CAAhB;AACA,SAAOJ,OAAO,CAACE,IAAR,CAAapB,QAAQ,IAAIA,QAAQ,CAACE,IAAlC,CAAP;AACD,CAND;;AAQA,eAAe;AAAEH,EAAAA,MAAF;AAAUI,EAAAA,MAAV;AAAkBY,EAAAA,MAAlB;AAA0BN,EAAAA,UAA1B;AAAsCY,EAAAA;AAAtC,CAAf","sourcesContent":["/* eslint-disable no-debugger */\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst baseUrl = '/api/blogs'\nconst dispatch = useDispatch()\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${JSON.parse(localStorage.getItem('loggedInUser')).token}` }\n  }\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async blogObject => {\n  // debugger\n  // console.log(baseUrl)\n  // console.log('blogObject', blogObject)\n  // console.log('Token', token)\n\n  // console.log('config', config);\n  try {\n    const response = await axios.post(baseUrl, blogObject, getConfig())\n    return response.data\n  } catch(error) {\n    dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n  }\n}\n\nconst deleteBlog = async blogId => {\n  const url = `${baseUrl}/${blogId}`\n  console.log(url)\n  const response = await axios.delete(url, getConfig())\n  return response.data\n}\n// const update = async blogObject => {\n//   // debugger\n//   const url = `${baseUrl}/${blogObject.id}`\n//   console.log(url)\n\n//   const config = {\n//     headers: { Authorization: token }\n//   }\n\n//   const response = await axios.put(url, blogObject, config)\n//   console.log(response.data)\n//   return response.data\n// }\n\nconst update = (blog) => {\n  console.log(`${baseUrl}/${blog.id}`, blog)\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst createComment = async comment => {\n  console.log('services', comment)\n  const url = `${baseUrl}/${comment.blogId}/comments`\n\n  const request = axios.post(url, comment)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteBlog, createComment }"]},"metadata":{},"sourceType":"module"}