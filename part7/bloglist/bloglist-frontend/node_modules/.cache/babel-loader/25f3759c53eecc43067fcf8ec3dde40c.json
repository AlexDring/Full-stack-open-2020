{"ast":null,"code":"/* eslint-disable no-debugger */\nimport axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n  token = `bearer ${localStorage.getItem('loggedInUser').token}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async blogObject => {\n  // console.log(baseUrl)\n  // console.log('blogObject', blogObject)\n  // console.log('Token', token)\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }; // console.log('config', config);\n\n  console.log(baseUrl, blogObject, config);\n  const response = await axios.post(baseUrl, blogObject, config);\n  return response.data;\n};\n\nconst deleteBlog = async blogId => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const url = `${baseUrl}/${blogId}`;\n  console.log(url);\n  const response = await axios.delete(url, config);\n  return response.data;\n}; // const update = async blogObject => {\n//   // debugger\n//   const url = `${baseUrl}/${blogObject.id}`\n//   console.log(url)\n//   const config = {\n//     headers: { Authorization: token }\n//   }\n//   const response = await axios.put(url, blogObject, config)\n//   console.log(response.data)\n//   return response.data\n// }\n\n\nconst update = blog => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, config);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  deleteBlog\n};","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","localStorage","getItem","getAll","response","get","data","create","blogObject","config","headers","Authorization","console","log","post","deleteBlog","blogId","url","delete","update","blog","request","put","id","then"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACAF,EAAAA,KAAK,GAAI,UAASG,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,KAAM,EAA7D;AACD,CAHD;;AAKA,MAAMK,MAAM,GAAG,YAAY;AACzB,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUR,OAAV,CAAvB;AACA,SAAOO,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,UAAN,IAAoB;AACjC;AACA;AACA;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf,CAJiC,CAOjC;;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ,EAAqBW,UAArB,EAAiCC,MAAjC;AACA,QAAML,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAN,CAAWjB,OAAX,EAAoBW,UAApB,EAAgCC,MAAhC,CAAvB;AAEA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CAZD;;AAcA,MAAMS,UAAU,GAAG,MAAMC,MAAN,IAAgB;AACjC,QAAMP,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMmB,GAAG,GAAI,GAAEpB,OAAQ,IAAGmB,MAAO,EAAjC;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,QAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACsB,MAAN,CAAaD,GAAb,EAAkBR,MAAlB,CAAvB;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CARD,C,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMa,MAAM,GAAIC,IAAD,IAAU;AACvB,QAAMX,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMuB,OAAO,GAAGzB,KAAK,CAAC0B,GAAN,CAAW,GAAEzB,OAAQ,IAAGuB,IAAI,CAACG,EAAG,EAAhC,EAAmCH,IAAnC,EAAyCX,MAAzC,CAAhB;AACA,SAAOY,OAAO,CAACG,IAAR,CAAapB,QAAQ,IAAIA,QAAQ,CAACE,IAAlC,CAAP;AACD,CAPD;;AAUA,eAAe;AAAEH,EAAAA,MAAF;AAAUI,EAAAA,MAAV;AAAkBR,EAAAA,QAAlB;AAA4BoB,EAAAA,MAA5B;AAAoCJ,EAAAA;AAApC,CAAf","sourcesContent":["/* eslint-disable no-debugger */\nimport axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n  token = `bearer ${localStorage.getItem('loggedInUser').token}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async blogObject => {\n  // console.log(baseUrl)\n  // console.log('blogObject', blogObject)\n  // console.log('Token', token)\n  const config = {\n    headers: { Authorization: token }\n  }\n  // console.log('config', config);\n  console.log(baseUrl, blogObject, config)\n  const response = await axios.post(baseUrl, blogObject, config)\n\n  return response.data\n}\n\nconst deleteBlog = async blogId => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${blogId}`\n  console.log(url)\n  const response = await axios.delete(url, config)\n  return response.data\n}\n\n// const update = async blogObject => {\n//   // debugger\n//   const url = `${baseUrl}/${blogObject.id}`\n//   console.log(url)\n\n//   const config = {\n//     headers: { Authorization: token }\n//   }\n\n//   const response = await axios.put(url, blogObject, config)\n//   console.log(response.data)\n//   return response.data\n// }\n\nconst update = (blog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, config)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, setToken, update, deleteBlog }"]},"metadata":{},"sourceType":"module"}