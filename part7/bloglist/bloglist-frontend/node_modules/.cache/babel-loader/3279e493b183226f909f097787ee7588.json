{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes;\n\nconst blogReducer = (state = [], action) => {\n  // console.log('state now: ', state)\n  // console.log('action', action)\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      {\n        return action.payload;\n      }\n\n    case 'NEW_BLOG':\n      {\n        return [...state, action.payload];\n      }\n\n    case 'INCREASE_LIKES':\n      {\n        const likedBlog = action.payload;\n        return state.map(blog => likedBlog.id === blog.id ? likedBlog : blog).sort(byLikes);\n      }\n\n    case 'DELETE_BLOG':\n      {\n        console.log(action.data);\n        return state.filter(blog => blog.id !== action.data);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    });\n  };\n};\nexport const createBlog = newBlog => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(newBlog);\n    dispatch({\n      type: 'NEW_BLOG',\n      payload: addedBlog\n    });\n  };\n};\nexport const increaseLikes = blog => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    });\n    dispatch({\n      type: 'INCREASE_LIKES',\n      payload: updateLikes\n    });\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    });\n  };\n};\nexport const newComment = comment => {\n  return async dispatch => {\n    console.log(\"Test\", comment);\n    dispatch({});\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","byLikes","a1","a2","likes","blogReducer","state","action","type","payload","likedBlog","map","blog","id","sort","console","log","data","filter","initBlogs","dispatch","blogs","getAll","createBlog","newBlog","addedBlog","create","increaseLikes","updateLikes","update","user","deleteBlog","newComment","comment"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAYA,EAAE,CAACC,KAAH,GAAWF,EAAE,CAACE,KAA1C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C;AACA;AACA,UAAOA,MAAM,CAACC,IAAd;AACA,SAAK,YAAL;AAAmB;AACjB,eAAOD,MAAM,CAACE,OAAd;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,eAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAMC,SAAS,GAAGH,MAAM,CAACE,OAAzB;AACA,eAAOH,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAIF,SAAS,CAACG,EAAV,KAAeD,IAAI,CAACC,EAApB,GAAyBH,SAAzB,GAAqCE,IAAvD,EAA6DE,IAA7D,CAAkEb,OAAlE,CAAP;AACD;;AACD,SAAK,aAAL;AAAoB;AAClBc,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,IAAnB;AACA,eAAOX,KAAK,CAACY,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACU,IAAxC,CAAP;AACD;;AACD;AACE,aAAOX,KAAP;AAhBF;AAkBD,CArBD;;AAuBA,OAAO,MAAMa,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMrB,WAAW,CAACsB,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMK,SAAS,GAAG,MAAMzB,WAAW,CAAC0B,MAAZ,CAAmBF,OAAnB,CAAxB;AACAJ,IAAAA,QAAQ,CAAE;AACRZ,MAAAA,IAAI,EAAE,UADE;AAERC,MAAAA,OAAO,EAAEgB;AAFD,KAAF,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,aAAa,GAAIf,IAAD,IAAU;AACrC,SAAO,MAAMQ,QAAN,IAAkB;AACvB,UAAMQ,WAAW,GAAG,MAAM5B,WAAW,CAAC6B,MAAZ,CAAmB,EAAE,GAAGjB,IAAL;AAAWR,MAAAA,KAAK,EAAEQ,IAAI,CAACR,KAAL,GAAa,CAA/B;AAAkC0B,MAAAA,IAAI,EAAElB,IAAI,CAACkB,IAAL,CAAUjB;AAAlD,KAAnB,CAA1B;AACAO,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEmB;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMG,UAAU,GAAIlB,EAAD,IAAQ;AAChC,SAAO,MAAMO,QAAN,IAAkB;AACvB,UAAMpB,WAAW,CAAC+B,UAAZ,CAAuBlB,EAAvB,CAAN;AACAO,IAAAA,QAAQ,CAAC;AACPZ,MAAAA,IAAI,EAAE,aADC;AAEPS,MAAAA,IAAI,EAAEJ;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMmB,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMb,QAAN,IAAkB;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiB,OAApB;AACAb,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,eAAef,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes\n\nconst blogReducer = (state = [], action) => {\n  // console.log('state now: ', state)\n  // console.log('action', action)\n  switch(action.type) {\n  case 'INIT_BLOGS': {\n    return action.payload\n  }\n  case 'NEW_BLOG': {\n    return [...state, action.payload]\n  }\n  case 'INCREASE_LIKES': {\n    const likedBlog = action.payload\n    return state.map(blog => likedBlog.id===blog.id ? likedBlog : blog).sort(byLikes)\n  }\n  case 'DELETE_BLOG': {\n    console.log(action.data)\n    return state.filter(blog => blog.id !== action.data)\n  }\n  default:\n    return state\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    })\n  }\n}\n\nexport const createBlog = (newBlog) => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(newBlog)\n    dispatch ({\n      type: 'NEW_BLOG',\n      payload: addedBlog\n    })\n  }\n}\n\nexport const increaseLikes = (blog) => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...blog, likes: blog.likes + 1, user: blog.user.id })\n    dispatch({\n      type: 'INCREASE_LIKES',\n      payload: updateLikes\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.deleteBlog(id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    })\n  }\n}\n\nexport const newComment = (comment) => {\n  return async dispatch => {\n    console.log(\"Test\", comment)\n    dispatch({})\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}