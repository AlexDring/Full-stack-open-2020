{"ast":null,"code":"const notificationReducer = (state = null, action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      {\n        return {\n          message: action.data,\n          type: action.timer\n        };\n      }\n\n    case 'CLEAR_NOTIFICATION':\n      return null;\n\n    default: // if none of the above matches, code comes here\n\n  }\n\n  return state;\n};\n\nexport const setNotification = setNotification => {\n  return (dispatch, getState) => {\n    const {\n      notification\n    } = getState();\n    console.log('notification state: ', notification);\n\n    if (notification) {\n      clearTimeout(notification.timerID);\n    }\n\n    let timerSet = setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 5000);\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: setNotification,\n      timer: timerSet\n    });\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","console","log","type","message","data","timer","setNotification","dispatch","getState","notification","clearTimeout","timerID","timerSet","setTimeout"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACE,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,eAAO;AACLC,UAAAA,OAAO,EAAEJ,MAAM,CAACK,IADX;AAELF,UAAAA,IAAI,EAAEH,MAAM,CAACM;AAFR,SAAP;AAID;;AACD,SAAK,oBAAL;AACE,aAAO,IAAP;;AACJ,YATA,CASS;;AATT;;AAWF,SAAOP,KAAP;AACD,CAfD;;AAiBA,OAAO,MAAMQ,eAAe,GAAIA,eAAD,IAAqB;AAClD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAmBD,QAAQ,EAAjC;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCQ,YAApC;;AAEA,QAAGA,YAAH,EAAiB;AACfC,MAAAA,YAAY,CAACD,YAAY,CAACE,OAAd,CAAZ;AACD;;AACD,QAAIC,QAAQ,GAAGC,UAAU,CAAC,MAAM;AAC9BN,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFwB,EAEtB,IAFsB,CAAzB;AAIAK,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,kBAAR;AAA4BE,MAAAA,IAAI,EAAEE,eAAlC;AAAmDD,MAAAA,KAAK,EAAEO;AAA1D,KAAD,CAAR;AACD,GAZD;AAaD,CAdM;AAgBP,eAAef,mBAAf","sourcesContent":["const notificationReducer = (state = null, action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n    switch (action.type) {\n      case 'SET_NOTIFICATION': {\n        return {\n          message: action.data,\n          type: action.timer\n        }\n      }\n      case 'CLEAR_NOTIFICATION': \n        return null \n    default: // if none of the above matches, code comes here\n    }\n  return state\n}\n\nexport const setNotification = (setNotification) => {\n  return (dispatch, getState) => {\n    const { notification } = getState()\n    console.log('notification state: ', notification);\n\n    if(notification) {\n      clearTimeout(notification.timerID)\n    }\n    let timerSet = setTimeout(() => {\n      dispatch({ type: 'CLEAR_NOTIFICATION' })\n    }, 5000)\n    \n    dispatch({ type: 'SET_NOTIFICATION', data: setNotification, timer: timerSet })\n  }\n}\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}