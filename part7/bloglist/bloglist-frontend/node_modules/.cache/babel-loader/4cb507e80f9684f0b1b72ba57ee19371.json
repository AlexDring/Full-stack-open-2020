{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes;\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      {\n        return action.content;\n      }\n\n    case 'NEW_BLOG':\n      {\n        return [...state, action.content];\n      }\n\n    case 'INCREASE_LIKES':\n      {\n        // eslint-disable-next-line no-debugger\n        const likedBlog = action.data;\n        console.log(likedBlog);\n        return state.map(blog => likedBlog.id === blog.id ? likedBlog : blog).sort(byLikes); // return console.log(state.map(blog => console.log(typeof blog.id)), typeof action.data.id)\n      }\n\n    case 'DELETE_BLOG':\n      {\n        console.log(action.data);\n        return state.filter(blog => blog.id !== action.data);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      content: blogs\n    });\n  };\n};\nexport const createBlog = content => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEW_BLOG',\n      content\n    });\n  };\n};\nexport const increaseLikes = content => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...content,\n      likes: content.likes + 1,\n      user: content.user.id\n    });\n    console.log('updateLikes', updateLikes);\n    dispatch({\n      type: 'INCREASE_LIKES',\n      data: updateLikes\n    });\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","byLikes","a1","a2","likes","blogReducer","state","action","console","log","type","content","likedBlog","data","map","blog","id","sort","filter","initBlogs","dispatch","blogs","getAll","createBlog","increaseLikes","updateLikes","update","user","deleteBlog"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAYA,EAAE,CAACC,KAAH,GAAWF,EAAE,CAACE,KAA1C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACA,SAAK,YAAL;AAAmB;AACjB,eAAOH,MAAM,CAACI,OAAd;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,eAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB;AACA,cAAMC,SAAS,GAAGL,MAAM,CAACM,IAAzB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACA,eAAON,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAIH,SAAS,CAACI,EAAV,KAAeD,IAAI,CAACC,EAApB,GAAyBJ,SAAzB,GAAqCG,IAAvD,EAA6DE,IAA7D,CAAkEhB,OAAlE,CAAP,CAJqB,CAKrB;AACD;;AACD,SAAK,aAAL;AAAoB;AAClBO,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACM,IAAnB;AACA,eAAOP,KAAK,CAACY,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACM,IAAxC,CAAP;AACD;;AACD;AACE,aAAOP,KAAP;AAnBF;AAqBD,CAxBD;;AA0BA,OAAO,MAAMa,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMrB,WAAW,CAACsB,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AACPV,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIZ,OAAD,IAAa;AACrC,SAAO,MAAMS,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAAE;AACRV,MAAAA,IAAI,EAAE,UADE;AAERC,MAAAA;AAFQ,KAAF,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMa,aAAa,GAAIb,OAAD,IAAa;AACxC,SAAO,MAAMS,QAAN,IAAkB;AACvB,UAAMK,WAAW,GAAG,MAAMzB,WAAW,CAAC0B,MAAZ,CAAmB,EAAE,GAAGf,OAAL;AAAcP,MAAAA,KAAK,EAAEO,OAAO,CAACP,KAAR,GAAgB,CAArC;AAAwCuB,MAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAAR,CAAaX;AAA3D,KAAnB,CAA1B;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgB,WAA3B;AACAL,IAAAA,QAAQ,CAAC;AACPV,MAAAA,IAAI,EAAE,gBADC;AAEPG,MAAAA,IAAI,EAAEY;AAFC,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMG,UAAU,GAAIZ,EAAD,IAAQ;AAChC,SAAO,MAAMI,QAAN,IAAkB;AACvB,UAAMpB,WAAW,CAAC4B,UAAZ,CAAuBZ,EAAvB,CAAN;AACAI,IAAAA,QAAQ,CAAC;AACPV,MAAAA,IAAI,EAAE,aADC;AAEPG,MAAAA,IAAI,EAAEG;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,eAAeX,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n  switch(action.type) {\n  case 'INIT_BLOGS': {\n    return action.content\n  }\n  case 'NEW_BLOG': {\n    return [...state, action.content]\n  }\n  case 'INCREASE_LIKES': {\n    // eslint-disable-next-line no-debugger\n    const likedBlog = action.data\n    console.log(likedBlog)\n    return state.map(blog => likedBlog.id===blog.id ? likedBlog : blog).sort(byLikes)\n    // return console.log(state.map(blog => console.log(typeof blog.id)), typeof action.data.id)\n  }\n  case 'DELETE_BLOG': {\n    console.log(action.data)\n    return state.filter(blog => blog.id !== action.data)\n  }\n  default:\n    return state\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      content: blogs\n    })\n  }\n}\n\nexport const createBlog = (content) => {\n  return async dispatch => {\n    dispatch ({\n      type: 'NEW_BLOG',\n      content\n    })\n  }\n}\n\nexport const increaseLikes = (content) => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...content, likes: content.likes + 1, user: content.user.id })\n    console.log('updateLikes', updateLikes)\n    dispatch({\n      type: 'INCREASE_LIKES',\n      data: updateLikes\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.deleteBlog(id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    })\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}