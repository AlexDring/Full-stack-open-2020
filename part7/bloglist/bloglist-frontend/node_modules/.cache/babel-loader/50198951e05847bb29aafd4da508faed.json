{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes;\n\nconst blogReducer = (state = [], action) => {\n  // console.log('state now: ', state)\n  // console.log('action', action)\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      {\n        return action.payload;\n      }\n\n    case 'NEW_BLOG':\n      {\n        return [...state, action.payload];\n      }\n\n    case 'INCREASE_LIKES':\n      {\n        const likedBlog = action.payload;\n        return state.map(blog => likedBlog.id === blog.id ? likedBlog : blog).sort(byLikes);\n      }\n\n    case 'DELETE_BLOG':\n      {\n        console.log(action.data);\n        return state.filter(blog => blog.id !== action.data);\n      }\n\n    case 'NEW_COMMENT':\n      {\n        console.log(action.payload); // eslint-disable-next-line no-debugger\n\n        debugger;\n        return state.map(blog => {\n          if (blog.id !== action.payload.id) {\n            return blog;\n          }\n\n          return { ...blog,\n            comments: [...blog.comments, action.payload]\n          };\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const newComment = comment => {\n  console.log(comment);\n  return async dispatch => {\n    const addedComment = await blogService.createComment(comment);\n    console.log('addedComment', addedComment);\n    dispatch({\n      type: 'NEW_COMMENT',\n      payload: addedComment\n    });\n  };\n};\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    });\n  };\n};\nexport const createBlog = newBlog => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(newBlog);\n    dispatch({\n      type: 'NEW_BLOG',\n      payload: addedBlog\n    });\n  };\n};\nexport const increaseLikes = blog => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    });\n    dispatch({\n      type: 'INCREASE_LIKES',\n      payload: updateLikes\n    });\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","byLikes","a1","a2","likes","blogReducer","state","action","type","payload","likedBlog","map","blog","id","sort","console","log","data","filter","comments","newComment","comment","dispatch","addedComment","createComment","initBlogs","blogs","getAll","createBlog","newBlog","addedBlog","create","increaseLikes","updateLikes","update","user","deleteBlog"],"mappings":"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","sourcesContent":["import blogService from '../services/blogs'\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes\n\nconst blogReducer = (state = [], action) => {\n  // console.log('state now: ', state)\n  // console.log('action', action)\n  switch(action.type) {\n  case 'INIT_BLOGS': {\n    return action.payload\n  }\n  case 'NEW_BLOG': {\n    return [...state, action.payload]\n  }\n  case 'INCREASE_LIKES': {\n    const likedBlog = action.payload\n    return state.map(blog => likedBlog.id===blog.id ? likedBlog : blog).sort(byLikes)\n  }\n  case 'DELETE_BLOG': {\n    console.log(action.data)\n    return state.filter(blog => blog.id !== action.data)\n  }\n  case 'NEW_COMMENT': {\n    console.log(action.payload)\n    // eslint-disable-next-line no-debugger\n    debugger\n    return state.map(blog => {\n      if (blog.id !== action.payload.id) {\n        return blog\n      }\n      return {\n        ...blog,\n        comments: [...blog.comments, action.payload]\n      }\n    }\n    )}\n  default:\n    return state\n  }\n}\n\nexport const newComment = (comment) => {\n  console.log(comment)\n  return async dispatch => {\n    const addedComment = await blogService.createComment(comment)\n    console.log('addedComment', addedComment)\n    dispatch({\n      type: 'NEW_COMMENT',\n      payload: addedComment\n    })\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    })\n  }\n}\n\nexport const createBlog = (newBlog) => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(newBlog)\n    dispatch ({\n      type: 'NEW_BLOG',\n      payload: addedBlog\n    })\n  }\n}\n\nexport const increaseLikes = (blog) => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...blog, likes: blog.likes + 1, user: blog.user.id })\n    dispatch({\n      type: 'INCREASE_LIKES',\n      payload: updateLikes\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.deleteBlog(id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    })\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}