{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/components/Users.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst Users = () => {\n  _s();\n\n  const blogs = useSelector(state => state.blogs);\n  let users = [];\n  blogs.forEach(blog => {\n    users = [...users, blog.user];\n  });\n  let countedUsers = users.reduce(function (accumulator, currentValue) {\n    if (currentValue in accumulator) {\n      accumulator[currentValue]++;\n    } else {\n      accumulator[currentValue] = 1;\n    }\n\n    return accumulator;\n  }, {});\n  let result = Object.keys(countedUsers).map(e => ({\n    name: e,\n    count: countedUsers[e]\n  }));\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"blogs created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), result.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/:id\",\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: user.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, user.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"TYHoK6W09eeJLXd0RuJrXxTEBOw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/components/Users.js"],"names":["React","useSelector","BrowserRouter","Router","Switch","Route","Users","blogs","state","users","forEach","blog","user","countedUsers","reduce","accumulator","currentValue","result","Object","keys","map","e","name","count"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAEUC,KAFV,QAGO,kBAHP;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,MAAIE,KAAK,GAAG,EAAZ;AAEAF,EAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAI;AACpBF,IAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWE,IAAI,CAACC,IAAhB,CAAR;AACD,GAFD;AAIA,MAAIC,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAAa,UAAUC,WAAV,EAAuBC,YAAvB,EAAqC;AACnE,QAAIA,YAAY,IAAID,WAApB,EAAiC;AAC/BA,MAAAA,WAAW,CAACC,YAAD,CAAX;AACD,KAFD,MAGK;AACHD,MAAAA,WAAW,CAACC,YAAD,CAAX,GAA4B,CAA5B;AACD;;AACD,WAAOD,WAAP;AACD,GARkB,EAQhB,EARgB,CAAnB;AAUA,MAAIE,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYN,YAAZ,EAA0BO,GAA1B,CAA8BC,CAAC,KAAK;AAC/CC,IAAAA,IAAI,EAAED,CADyC;AACtCE,IAAAA,KAAK,EAAEV,YAAY,CAACQ,CAAD;AADmB,GAAL,CAA/B,CAAb;AAKA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGJ,MAAM,CAACG,GAAP,CAAWR,IAAI,iBACd;AAAA,kCACE,QAAC,MAAD;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAA,qCACE;AAAA,0BAAKA,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,sBAAKV,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAASX,IAAI,CAACU,IAAd;AAAA;AAAA;AAAA;AAAA,gBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA9CD;;GAAMhB,K;UACUL,W;;;KADVK,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom'\n\nconst Users = () => {\n  const blogs = useSelector(state => state.blogs)\n  let users = []\n\n  blogs.forEach(blog => {\n    users = [...users, blog.user]\n  })\n\n  let countedUsers = users.reduce(function (accumulator, currentValue) {\n    if (currentValue in accumulator) {\n      accumulator[currentValue]++\n    }\n    else {\n      accumulator[currentValue] = 1\n    }\n    return accumulator\n  }, {})\n\n  let result = Object.keys(countedUsers).map(e => ({\n    name: e, count: countedUsers[e]\n  }))\n\n\n  return(\n    <Router>\n      <h1>Users</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>blogs created</th>\n          </tr>\n          {result.map(user =>\n            <tr key={user.name}>\n              <Switch>\n                <Route path='/:id'>\n                  <th>{user.name}</th>\n                </Route>\n              </Switch>\n              <th>{user.count}</th>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Router>\n  )\n}\n\nexport default Users"]},"metadata":{},"sourceType":"module"}