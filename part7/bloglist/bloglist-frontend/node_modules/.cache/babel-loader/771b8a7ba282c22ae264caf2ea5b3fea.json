{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport BlogList from './components/BlogList';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport Notification from './components/Notification';\nimport { useDispatch } from 'react-redux';\nimport { setNotification } from './reducers/notificationReducer';\nimport { initBlogs } from './reducers/blogReducer';\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch(); // const blogs = useSelector(state => state.blogs)\n\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    dispatch(initBlogs());\n  }, []);\n  const blogFormRef = /*#__PURE__*/React.createRef(); // TODO https://fullstackopen.com/en/part5/props_children_and_proptypes#references-to-components-with-ref\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser');\n\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      setUser(user); // setUserCheck(user.username)\n\n      blogService.setToken(user.token);\n    }\n\n    console.log(loggedInUser);\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      }); // this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n\n      blogService.setToken(user.token);\n      setUser(user);\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user));\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      // notify(error.response.data.error, 'error')\n      dispatch(setNotification({\n        message: error.response.data.error,\n        class: 'error'\n      }));\n    }\n  };\n\n  const handleLogout = e => {\n    e.preventDefault();\n    window.localStorage.removeItem('loggedInUser');\n    setUser(null);\n  }; // const addBlog = async (blogObject) => {\n  //   try {\n  //     const addedBlog = await blogService.create(blogObject)\n  //     blogFormRef.current.visibilityToggle()\n  //     setBlogs(blogs.concat(addedBlog))\n  //     dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n  //   } catch(error) {\n  //     dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n  //   }\n  // }\n  // const updateBlog = async (blogObject) => {\n  //   try {\n  //     console.log('updating', blogObject)\n  //     const changedBlog = await blogService.update(blogObject)\n  //     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n  //     setBlogs(response)\n  //   } catch(error) {\n  //     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n  //     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n  //     console.log(error)\n  //   }\n  // }\n  // const removeBlog = async (blogObject) => {\n  //   try {\n  //     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n  //       blogService.deleteBlog(blogObject.id)\n  //       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n  //       setBlogs(filteredBlogs)\n  //     }\n  //   } catch(error) {\n  //     console.log(error)\n  //   }\n  // }\n\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to the application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginForm\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            name: \"username\",\n            onChange: ({\n              target\n            }) => setUsername(target.value),\n            placeholder: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            name: \"password\",\n            onChange: ({\n              target\n            }) => setPassword(target.value),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-button\",\n          type: \"submit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Logged in as \", user.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleLogout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new blog\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: /*#__PURE__*/_jsxDEV(BlogList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"W0YNcyStthJYwe72QOLMVMnOQTw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","blogService","loginService","BlogList","BlogForm","Togglable","Notification","useDispatch","setNotification","initBlogs","App","dispatch","user","setUser","username","setUsername","password","setPassword","blogFormRef","createRef","loggedInUser","localStorage","getItem","JSON","parse","setToken","token","console","log","handleLogin","event","preventDefault","login","window","setItem","stringify","error","message","response","data","class","handleLogout","e","removeItem","target","value","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport BlogList from './components/BlogList'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\n\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from './reducers/notificationReducer'\nimport { initBlogs } from './reducers/blogReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  // const blogs = useSelector(state => state.blogs)\n\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  useEffect(() => {\n    dispatch(initBlogs())\n  }, [])\n\n  const blogFormRef = React.createRef() // TODO https://fullstackopen.com/en/part5/props_children_and_proptypes#references-to-components-with-ref\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser')\n    if(loggedInUser) {\n      const user = JSON.parse(loggedInUser)\n      setUser(user)\n      // setUserCheck(user.username)\n      blogService.setToken(user.token)\n    }\n    console.log(loggedInUser)\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n      blogService.setToken(user.token)\n      setUser(user)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      setUsername('')\n      setPassword('')\n    } catch(error) {\n      // notify(error.response.data.error, 'error')\n      dispatch(setNotification({ message: error.response.data.error, class: 'error' }))\n    }\n  }\n\n  const handleLogout = (e) => {\n    e.preventDefault()\n    window.localStorage.removeItem('loggedInUser')\n    setUser(null)\n  }\n\n  // const addBlog = async (blogObject) => {\n  //   try {\n  //     const addedBlog = await blogService.create(blogObject)\n  //     blogFormRef.current.visibilityToggle()\n  //     setBlogs(blogs.concat(addedBlog))\n  //     dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n  //   } catch(error) {\n  //     dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n  //   }\n  // }\n\n\n  // const updateBlog = async (blogObject) => {\n  //   try {\n  //     console.log('updating', blogObject)\n  //     const changedBlog = await blogService.update(blogObject)\n  //     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n  //     setBlogs(response)\n  //   } catch(error) {\n  //     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n  //     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n  //     console.log(error)\n  //   }\n  // }\n\n  // const removeBlog = async (blogObject) => {\n  //   try {\n  //     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n  //       blogService.deleteBlog(blogObject.id)\n  //       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n  //       setBlogs(filteredBlogs)\n  //     }\n  //   } catch(error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  if (user === null) {\n    return (\n      <div>\n        {/* { !notification ? null : <div className={ notification.type === 'success' ? 'success' : 'error' }>{notification.message}</div> } */}\n        <Notification />\n        <h2>Login to the application</h2>\n        <form id=\"loginForm\" onSubmit={handleLogin}>\n          <div>\n            <input\n              id='username'\n              type='text'\n              value={username}\n              name='username'\n              onChange={({ target }) => setUsername(target.value)}\n              placeholder='username'\n            />\n          </div>\n          <div>\n            <input\n              id='password'\n              type='password'\n              value={password}\n              name='password'\n              onChange={({ target }) => setPassword(target.value)}\n              placeholder='password'\n            />\n          </div>\n          <button id='login-button' type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification />\n      <div>Logged in as {user.name}<button type='submit' onClick={handleLogout}>logout</button></div>\n      <h2>create new</h2>\n      <Togglable buttonLabel='new blog' ref={blogFormRef}>\n        <BlogForm />\n        {/* <BlogForm createBlog={addBlog} /> */}\n      </Togglable>\n      <div className=\"blogs\">\n        {/* {[...blogs]\n          .sort((a,b) => b.likes > a.likes ? 1 : -1)\n          .map(blog =>\n            <Blog\n              key={blog.id}\n              blog={blog}\n              // userCheck={userCheck}\n              owner={user.username === blog.user.username}\n              updateBlog={updateBlog}\n              removeBlog={removeBlog} />\n          )} */}\n        <BlogList />\n\n        {/*REVIEW- https://stackoverflow.com/questions/43572436/sort-an-array-of-objects-in-react-and-render-them*/}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}