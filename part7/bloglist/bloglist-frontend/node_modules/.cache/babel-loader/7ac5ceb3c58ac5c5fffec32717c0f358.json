{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes;\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      {\n        return action.payload;\n      }\n\n    case 'NEW_BLOG':\n      {\n        return [...state, action.newBlog];\n      }\n\n    case 'INCREASE_LIKES':\n      {\n        const likedBlog = action.payload;\n        return state.map(blog => likedBlog.id === blog.id ? likedBlog : blog).sort(byLikes);\n      }\n\n    case 'DELETE_BLOG':\n      {\n        console.log(action.data);\n        return state.filter(blog => blog.id !== action.data);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    });\n  };\n};\nexport const createBlog = newBlog => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(newBlog);\n    dispatch({\n      type: 'NEW_BLOG',\n      addedBlog\n    });\n  };\n};\nexport const increaseLikes = blog => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    });\n    dispatch({\n      type: 'INCREASE_LIKES',\n      payload: updateLikes\n    });\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    await blogService.deleteBlog(id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","byLikes","a1","a2","likes","blogReducer","state","action","console","log","type","payload","newBlog","likedBlog","map","blog","id","sort","data","filter","initBlogs","dispatch","blogs","getAll","createBlog","addedBlog","create","increaseLikes","updateLikes","update","user","deleteBlog"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAYA,EAAE,CAACC,KAAH,GAAWF,EAAE,CAACE,KAA1C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACA,SAAK,YAAL;AAAmB;AACjB,eAAOH,MAAM,CAACI,OAAd;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,eAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAMC,SAAS,GAAGN,MAAM,CAACI,OAAzB;AACA,eAAOL,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAIF,SAAS,CAACG,EAAV,KAAeD,IAAI,CAACC,EAApB,GAAyBH,SAAzB,GAAqCE,IAAvD,EAA6DE,IAA7D,CAAkEhB,OAAlE,CAAP;AACD;;AACD,SAAK,aAAL;AAAoB;AAClBO,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACW,IAAnB;AACA,eAAOZ,KAAK,CAACa,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACW,IAAxC,CAAP;AACD;;AACD;AACE,aAAOZ,KAAP;AAhBF;AAkBD,CArBD;;AAuBA,OAAO,MAAMc,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMtB,WAAW,CAACuB,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AACPX,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAEW;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAIZ,OAAD,IAAa;AACrC,SAAO,MAAMS,QAAN,IAAkB;AACvB,UAAMI,SAAS,GAAG,MAAMzB,WAAW,CAAC0B,MAAZ,CAAmBd,OAAnB,CAAxB;AACAS,IAAAA,QAAQ,CAAE;AACRX,MAAAA,IAAI,EAAE,UADE;AAERe,MAAAA;AAFQ,KAAF,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,aAAa,GAAIZ,IAAD,IAAU;AACrC,SAAO,MAAMM,QAAN,IAAkB;AACvB,UAAMO,WAAW,GAAG,MAAM5B,WAAW,CAAC6B,MAAZ,CAAmB,EAAE,GAAGd,IAAL;AAAWX,MAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,GAAa,CAA/B;AAAkC0B,MAAAA,IAAI,EAAEf,IAAI,CAACe,IAAL,CAAUd;AAAlD,KAAnB,CAA1B;AACAK,IAAAA,QAAQ,CAAC;AACPX,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEiB;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMG,UAAU,GAAIf,EAAD,IAAQ;AAChC,SAAO,MAAMK,QAAN,IAAkB;AACvB,UAAMrB,WAAW,CAAC+B,UAAZ,CAAuBf,EAAvB,CAAN;AACAK,IAAAA,QAAQ,CAAC;AACPX,MAAAA,IAAI,EAAE,aADC;AAEPQ,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,eAAeX,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\nconst byLikes = (a1, a2) => a2.likes - a1.likes\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n  switch(action.type) {\n  case 'INIT_BLOGS': {\n    return action.payload\n  }\n  case 'NEW_BLOG': {\n    return [...state, action.newBlog]\n  }\n  case 'INCREASE_LIKES': {\n    const likedBlog = action.payload\n    return state.map(blog => likedBlog.id===blog.id ? likedBlog : blog).sort(byLikes)\n  }\n  case 'DELETE_BLOG': {\n    console.log(action.data)\n    return state.filter(blog => blog.id !== action.data)\n  }\n  default:\n    return state\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    })\n  }\n}\n\nexport const createBlog = (newBlog) => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(newBlog)\n    dispatch ({\n      type: 'NEW_BLOG',\n      addedBlog\n    })\n  }\n}\n\nexport const increaseLikes = (blog) => {\n  return async dispatch => {\n    const updateLikes = await blogService.update({ ...blog, likes: blog.likes + 1, user: blog.user.id })\n    dispatch({\n      type: 'INCREASE_LIKES',\n      payload: updateLikes\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.deleteBlog(id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    })\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}