{"ast":null,"code":"/* eslint-disable no-debugger */\nimport axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = () => {\n  console.log(`bearer ${JSON.parse(localStorage.getItem('loggedInUser')).token}`);\n  token = `bearer ${JSON.parse(localStorage.getItem('loggedInUser')).token}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async blogObject => {\n  // debugger\n  // console.log(baseUrl)\n  // console.log('blogObject', blogObject)\n  // console.log('Token', token)\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }; // console.log('config', config);\n\n  console.log(baseUrl, blogObject, config);\n  const response = await axios.post(baseUrl, blogObject, config);\n  return response.data;\n};\n\nconst deleteBlog = async blogId => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const url = `${baseUrl}/${blogId}`;\n  console.log(url);\n  const response = await axios.delete(url, config);\n  return response.data;\n}; // const update = async blogObject => {\n//   // debugger\n//   const url = `${baseUrl}/${blogObject.id}`\n//   console.log(url)\n//   const config = {\n//     headers: { Authorization: token }\n//   }\n//   const response = await axios.put(url, blogObject, config)\n//   console.log(response.data)\n//   return response.data\n// }\n\n\nconst update = blog => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, config);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  deleteBlog\n};","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","console","log","JSON","parse","localStorage","getItem","getAll","response","get","data","create","blogObject","config","headers","Authorization","post","deleteBlog","blogId","url","delete","update","blog","request","put","id","then"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAa,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDP,KAAM,EAA7E;AACAA,EAAAA,KAAK,GAAI,UAASI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDP,KAAM,EAAzE;AACD,CAHD;;AAKA,MAAMQ,MAAM,GAAG,YAAY;AACzB,QAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUX,OAAV,CAAvB;AACA,SAAOU,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,UAAN,IAAoB;AACjC;AACA;AACA;AACA;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AADI,GAAf,CALiC,CAQjC;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBc,UAArB,EAAiCC,MAAjC;AACA,QAAML,QAAQ,GAAG,MAAMX,KAAK,CAACmB,IAAN,CAAWlB,OAAX,EAAoBc,UAApB,EAAgCC,MAAhC,CAAvB;AAEA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CAbD;;AAeA,MAAMO,UAAU,GAAG,MAAMC,MAAN,IAAgB;AACjC,QAAML,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AADI,GAAf;AAGA,QAAMoB,GAAG,GAAI,GAAErB,OAAQ,IAAGoB,MAAO,EAAjC;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACA,QAAMX,QAAQ,GAAG,MAAMX,KAAK,CAACuB,MAAN,CAAaD,GAAb,EAAkBN,MAAlB,CAAvB;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CARD,C,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMW,MAAM,GAAIC,IAAD,IAAU;AACvB,QAAMT,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AADI,GAAf;AAIA,QAAMwB,OAAO,GAAG1B,KAAK,CAAC2B,GAAN,CAAW,GAAE1B,OAAQ,IAAGwB,IAAI,CAACG,EAAG,EAAhC,EAAmCH,IAAnC,EAAyCT,MAAzC,CAAhB;AACA,SAAOU,OAAO,CAACG,IAAR,CAAalB,QAAQ,IAAIA,QAAQ,CAACE,IAAlC,CAAP;AACD,CAPD;;AAUA,eAAe;AAAEH,EAAAA,MAAF;AAAUI,EAAAA,MAAV;AAAkBX,EAAAA,QAAlB;AAA4BqB,EAAAA,MAA5B;AAAoCJ,EAAAA;AAApC,CAAf","sourcesContent":["/* eslint-disable no-debugger */\nimport axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = () => {\n  console.log(`bearer ${JSON.parse(localStorage.getItem('loggedInUser')).token}`)\n  token = `bearer ${JSON.parse(localStorage.getItem('loggedInUser')).token}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async blogObject => {\n  // debugger\n  // console.log(baseUrl)\n  // console.log('blogObject', blogObject)\n  // console.log('Token', token)\n  const config = {\n    headers: { Authorization: token }\n  }\n  // console.log('config', config);\n  console.log(baseUrl, blogObject, config)\n  const response = await axios.post(baseUrl, blogObject, config)\n\n  return response.data\n}\n\nconst deleteBlog = async blogId => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${blogId}`\n  console.log(url)\n  const response = await axios.delete(url, config)\n  return response.data\n}\n\n// const update = async blogObject => {\n//   // debugger\n//   const url = `${baseUrl}/${blogObject.id}`\n//   console.log(url)\n\n//   const config = {\n//     headers: { Authorization: token }\n//   }\n\n//   const response = await axios.put(url, blogObject, config)\n//   console.log(response.data)\n//   return response.data\n// }\n\nconst update = (blog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, config)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, setToken, update, deleteBlog }"]},"metadata":{},"sourceType":"module"}