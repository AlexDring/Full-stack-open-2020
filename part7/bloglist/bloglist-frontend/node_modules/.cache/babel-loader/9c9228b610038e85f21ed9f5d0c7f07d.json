{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Users from './components/Users';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm'; // import Logout from './components/Logout'\n\nimport User from './components/User';\nimport Blog from './components/Blog';\nimport { initBlogs } from './reducers/blogReducer';\nimport { loadUser, userLogout } from './reducers/userReducer';\nimport userService from './services/users';\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState();\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(state => state.user);\n  const blogs = useSelector(state => state.blogs);\n\n  if (!blogs) {\n    return null;\n  }\n\n  console.log('blogs', blogs);\n  console.log('blogs', blogs[0].comments.length);\n  useEffect(() => {\n    dispatch(initBlogs());\n    console.log('rerender');\n  }, [dispatch]);\n  useEffect(() => {\n    userService.getAll().then(users => setUsers(users));\n  }, []);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser');\n\n    if (loggedInUser) {\n      const parsed = JSON.parse(loggedInUser);\n      dispatch(loadUser(parsed));\n    }\n  }, []);\n\n  const handleLogout = e => {\n    e.preventDefault();\n    window.localStorage.removeItem('loggedInUser');\n    dispatch(userLogout());\n  };\n\n  const padding = {\n    padding: 5\n  };\n\n  if (loggedIn === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/\",\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/users\",\n        children: \"users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [loggedIn.name, \" logged in \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleLogout,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/:id\",\n        children: /*#__PURE__*/_jsxDEV(User, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        children: /*#__PURE__*/_jsxDEV(Users, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blogs/:id\",\n        children: /*#__PURE__*/_jsxDEV(Blog, {\n          blogs: blogs,\n          user: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          user: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"83g+h3zge+zTRiMDTRnMoCJnsM0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App; // const handleLogin = async (event) => {\n//   event.preventDefault()\n//   console.log('Form Login', username, password)\n//   try {\n//     const user = await loginService.login({\n//       username, password\n//     })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n//     blogService.setToken(user.token)\n//     setUser(user)\n//     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n//     setUsername('')\n//     setPassword('')\n//   } catch(error) {\n//     // notify(error.response.data.error, 'error')\n//     dispatch(setNotification({ message: error.response.data.error, class: 'error' }))\n//   }\n// }\n// const addBlog = async (blogObject) => {\n//   try {\n//     const addedBlog = await blogService.create(blogObject)\n//     blogFormRef.current.visibilityToggle()\n//     setBlogs(blogs.concat(addedBlog))\n//     dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n//   } catch(error) {\n//     dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n//   }\n// }\n// const updateBlog = async (blogObject) => {\n//   try {\n//     console.log('updating', blogObject)\n//     const changedBlog = await blogService.update(blogObject)\n//     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n//     setBlogs(response)\n//   } catch(error) {\n//     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n//     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n//     console.log(error)\n//   }\n// }\n// const removeBlog = async (blogObject) => {\n//   try {\n//     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n//       blogService.deleteBlog(blogObject.id)\n//       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n//       setBlogs(filteredBlogs)\n//     }\n//   } catch(error) {\n//     console.log(error)\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Switch","Route","Link","Home","Users","Notification","LoginForm","User","Blog","initBlogs","loadUser","userLogout","userService","App","users","setUsers","dispatch","loggedIn","state","user","blogs","console","log","comments","length","getAll","then","loggedInUser","localStorage","getItem","parsed","JSON","parse","handleLogout","e","preventDefault","window","removeItem","padding","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Link } from 'react-router-dom'\n\nimport Home from './components/Home'\nimport Users from './components/Users'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\n// import Logout from './components/Logout'\nimport User from './components/User'\nimport  Blog from './components/Blog'\n\nimport { initBlogs } from './reducers/blogReducer'\nimport { loadUser, userLogout } from './reducers/userReducer'\nimport userService from './services/users'\n\nconst App = () => {\n  const [users, setUsers] = useState()\n  const dispatch = useDispatch()\n  const loggedIn = useSelector(state => state.user)\n  const blogs = useSelector(state => state.blogs)\n  if(!blogs) {\n    return null\n  }\n  console.log('blogs', blogs)\n  console.log('blogs', blogs[0].comments.length)\n\n  useEffect(() => {\n    dispatch(initBlogs())\n    console.log('rerender')\n  }, [dispatch])\n\n  useEffect(() => {\n    userService.getAll().then(users =>\n      setUsers(users))\n  }, [])\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser')\n    if(loggedInUser) {\n      const parsed = JSON.parse(loggedInUser)\n      dispatch(loadUser(parsed))\n    }\n  }, [])\n\n  const handleLogout = (e) => {\n    e.preventDefault()\n    window.localStorage.removeItem('loggedInUser')\n    dispatch(userLogout())\n  }\n\n  const padding = {\n    padding: 5\n  }\n\n  if (loggedIn === null) {\n    return (\n      <div>\n        <Notification />\n        <LoginForm />\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div>\n        <Link style={padding} to=\"/\">blogs</Link>\n        <Link style={padding} to=\"/users\">users</Link>\n        <em>{loggedIn.name} logged in <button type='submit' onClick={handleLogout}>logout</button></em>\n      </div>\n      <h2>blogs</h2>\n      <Notification />\n      {/* <Logout name={loggedIn.name} /> */}\n\n      <Switch>\n        <Route path='/users/:id'>\n          <User users={users} />\n        </Route>\n        <Route path='/users'>\n          <Users users={users} />\n        </Route>\n        <Route path='/blogs/:id'>\n          <Blog blogs={blogs} user={loggedIn} />\n        </Route>\n        <Route path='/' >\n          <Home user={loggedIn} />\n        </Route>\n      </Switch>\n    </div>)\n}\n\nexport default App\n\n\n// const handleLogin = async (event) => {\n//   event.preventDefault()\n//   console.log('Form Login', username, password)\n//   try {\n//     const user = await loginService.login({\n//       username, password\n//     })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n//     blogService.setToken(user.token)\n//     setUser(user)\n//     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n//     setUsername('')\n//     setPassword('')\n//   } catch(error) {\n//     // notify(error.response.data.error, 'error')\n//     dispatch(setNotification({ message: error.response.data.error, class: 'error' }))\n//   }\n// }\n\n\n// const addBlog = async (blogObject) => {\n//   try {\n//     const addedBlog = await blogService.create(blogObject)\n//     blogFormRef.current.visibilityToggle()\n//     setBlogs(blogs.concat(addedBlog))\n//     dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n//   } catch(error) {\n//     dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n//   }\n// }\n\n\n// const updateBlog = async (blogObject) => {\n//   try {\n//     console.log('updating', blogObject)\n//     const changedBlog = await blogService.update(blogObject)\n//     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n//     setBlogs(response)\n//   } catch(error) {\n//     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n//     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n//     console.log(error)\n//   }\n// }\n\n// const removeBlog = async (blogObject) => {\n//   try {\n//     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n//       blogService.deleteBlog(blogObject.id)\n//       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n//       setBlogs(filteredBlogs)\n//     }\n//   } catch(error) {\n//     console.log(error)\n//   }\n// }"]},"metadata":{},"sourceType":"module"}