{"ast":null,"code":"const notificationReducer = (state = null, action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      {\n        return {\n          message: action.data,\n          type: action.timer\n        };\n      }\n\n    case 'CLEAR_NOTIFICATION':\n      return null;\n\n    default: // if none of the above matches, code comes here\n\n  }\n\n  return state;\n};\n\nexport const setNotification = content => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 5000);\n  };\n}; // export const setNotification = (setNotification) => {\n//   return (dispatch, getState) => {\n//     const { notification } = getState()\n//     console.log('notification state: ', notification);\n//     if(notification) {\n//       clearTimeout(notification.timerID)\n//     }\n//     let timerSet = setTimeout(() => {\n//       dispatch({ type: 'CLEAR_NOTIFICATION' })\n//     }, 5000)\n//     dispatch({ type: 'SET_NOTIFICATION', data: setNotification, timer: timerSet })\n//   }\n// }\n\nexport default notificationReducer;","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","console","log","type","message","data","timer","setNotification","content","dispatch","setTimeout"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACE,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,eAAO;AACLC,UAAAA,OAAO,EAAEJ,MAAM,CAACK,IADX;AAELF,UAAAA,IAAI,EAAEH,MAAM,CAACM;AAFR,SAAP;AAID;;AACD,SAAK,oBAAL;AACE,aAAO,IAAP;;AACJ,YATA,CASS;;AATT;;AAWF,SAAOP,KAAP;AACD,CAfD;;AAiBA,OAAO,MAAMQ,eAAe,GAAIC,OAAD,IAAa;AAC1C,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAE,kBADC;AAEPK,MAAAA;AAFO,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARD;AASD,CAVM,C,CAYP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAeL,mBAAf","sourcesContent":["const notificationReducer = (state = null, action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n    switch (action.type) {\n      case 'SET_NOTIFICATION': {\n        return {\n          message: action.data,\n          type: action.timer\n        }\n      }\n      case 'CLEAR_NOTIFICATION': \n        return null \n    default: // if none of the above matches, code comes here\n    }\n  return state\n}\n\nexport const setNotification = (content) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispatch({ type: 'CLEAR_NOTIFICATION' })\n    }, 5000)\n  }\n}\n\n// export const setNotification = (setNotification) => {\n//   return (dispatch, getState) => {\n//     const { notification } = getState()\n//     console.log('notification state: ', notification);\n\n//     if(notification) {\n//       clearTimeout(notification.timerID)\n//     }\n//     let timerSet = setTimeout(() => {\n//       dispatch({ type: 'CLEAR_NOTIFICATION' })\n//     }, 5000)\n    \n//     dispatch({ type: 'SET_NOTIFICATION', data: setNotification, timer: timerSet })\n//   }\n// }\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}