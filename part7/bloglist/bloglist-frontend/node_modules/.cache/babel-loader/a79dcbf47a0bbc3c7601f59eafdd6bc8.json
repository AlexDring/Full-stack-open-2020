{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport blogService from './services/blogs';\nimport loginService from './services/login'; // import Blog from './components/Blog'\n\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport Notification from './components/Notification';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNotification } from './reducers/notificationReducer';\nimport { initBlogs } from './reducers/blogReducer';\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    blogService.getAll().then(blogs => dispatch(initBlogs(blogs)));\n  }, []);\n  const blogz = useSelector(state => state.blogs);\n  console.log('blogz', blogz);\n  console.log('APP STATE', blogz);\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); // const [notification, setNotification] = useState(null)\n\n  const blogFormRef = /*#__PURE__*/React.createRef(); // TODO https://fullstackopen.com/en/part5/props_children_and_proptypes#references-to-components-with-ref\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => {\n      // console.log('setblogz', blogs)\n      dispatch(initBlogs(blogs));\n    });\n  }, []);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser');\n\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      setUser(user); // setUserCheck(user.username)\n\n      blogService.setToken(user.token);\n    }\n\n    console.log(loggedInUser);\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      }); // this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n\n      blogService.setToken(user.token);\n      setUser(user);\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user));\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      // notify(error.response.data.error, 'error')\n      dispatch(setNotification({\n        message: error.response.data.error,\n        class: 'error'\n      })); // console.log(exception)\n    }\n  };\n\n  const handleLogout = e => {\n    e.preventDefault();\n    window.localStorage.removeItem('loggedInUser');\n    setUser(null);\n  };\n\n  const addBlog = async blogObject => {\n    try {\n      const addedBlog = await blogService.create(blogObject);\n      blogFormRef.current.visibilityToggle();\n      setBlogs(blogs.concat(addedBlog));\n      dispatch(setNotification({\n        message: `${addedBlog.title} by ${addedBlog.author} has been added`,\n        class: 'success'\n      }));\n    } catch (error) {\n      dispatch(setNotification({\n        message: `blog not added - ${error.response.data.error}`,\n        class: 'error'\n      }));\n    }\n  }; // const updateBlog = async (blogObject) => {\n  //   try {\n  //     console.log('updating', blogObject)\n  //     const changedBlog = await blogService.update(blogObject)\n  //     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n  //     setBlogs(response)\n  //   } catch(error) {\n  //     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n  //     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n  //     console.log(error)\n  //   }\n  // }\n  // const removeBlog = async (blogObject) => {\n  //   try {\n  //     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n  //       blogService.deleteBlog(blogObject.id)\n  //       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n  //       setBlogs(filteredBlogs)\n  //     }\n  //   } catch(error) {\n  //     console.log(error)\n  //   }\n  // }\n\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to the application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginForm\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            name: \"username\",\n            onChange: ({\n              target\n            }) => setUsername(target.value),\n            placeholder: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            name: \"password\",\n            onChange: ({\n              target\n            }) => setPassword(target.value),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-button\",\n          type: \"submit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Logged in as \", user.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleLogout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new blog\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        createBlog: addBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: blogz.map(blog => console.log(blog) // <Blog\n      //   key={blog.id}\n      //   blog={blog}\n      //   // owner={user.username === blog.user.username}\n      //   updateBlog={updateBlog}\n      //   removeBlog={removeBlog} />\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8jnmiK2NxDAn3m69qLyhx0Ed/3c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","blogService","loginService","BlogForm","Togglable","Notification","useDispatch","useSelector","setNotification","initBlogs","App","dispatch","getAll","then","blogs","blogz","state","console","log","setBlogs","user","setUser","username","setUsername","password","setPassword","blogFormRef","createRef","loggedInUser","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","window","setItem","stringify","error","message","response","data","class","handleLogout","e","removeItem","addBlog","blogObject","addedBlog","create","current","visibilityToggle","concat","title","author","target","value","name","map","blog"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CACRW,MADH,GACYC,IADZ,CACiBC,KAAK,IAClBH,QAAQ,CAACF,SAAS,CAACK,KAAD,CAAV,CAFZ;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACF,KAAhB,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB;AACA,QAAM,CAACD,KAAD,EAAQK,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC,CAfgB,CAgBhB;;AAEA,QAAM2B,WAAW,gBAAG5B,KAAK,CAAC6B,SAAN,EAApB,CAlBgB,CAkBsB;;AAEtC3B,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACW,MAAZ,GAAqBC,IAArB,CAA0BC,KAAK,IAAI;AACjC;AACAH,MAAAA,QAAQ,CAACF,SAAS,CAACK,KAAD,CAAV,CAAR;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4B,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;;AACA,QAAGF,YAAH,EAAiB;AACf,YAAMR,IAAI,GAAGW,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAb;AACAP,MAAAA,OAAO,CAACD,IAAD,CAAP,CAFe,CAGf;;AACAnB,MAAAA,WAAW,CAACgC,QAAZ,CAAqBb,IAAI,CAACc,KAA1B;AACD;;AACDjB,IAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ;AACD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMO,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACF,YAAMjB,IAAI,GAAG,MAAMlB,YAAY,CAACoC,KAAb,CAAmB;AACpChB,QAAAA,QADoC;AAC1BE,QAAAA;AAD0B,OAAnB,CAAnB,CADE,CAGA;;AACFvB,MAAAA,WAAW,CAACgC,QAAZ,CAAqBb,IAAI,CAACc,KAA1B;AACAb,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAmB,MAAAA,MAAM,CAACV,YAAP,CAAoBW,OAApB,CAA4B,cAA5B,EAA4CT,IAAI,CAACU,SAAL,CAAerB,IAAf,CAA5C;AACAG,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KATD,CASE,OAAMiB,KAAN,EAAa;AACb;AACA/B,MAAAA,QAAQ,CAACH,eAAe,CAAC;AAAEmC,QAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBH,KAA/B;AAAsCI,QAAAA,KAAK,EAAE;AAA7C,OAAD,CAAhB,CAAR,CAFa,CAGb;AACD;AACF,GAjBD;;AAmBA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACX,cAAF;AACAE,IAAAA,MAAM,CAACV,YAAP,CAAoBoB,UAApB,CAA+B,cAA/B;AACA5B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAJD;;AAMA,QAAM6B,OAAO,GAAG,MAAOC,UAAP,IAAsB;AACpC,QAAI;AACF,YAAMC,SAAS,GAAG,MAAMnD,WAAW,CAACoD,MAAZ,CAAmBF,UAAnB,CAAxB;AACAzB,MAAAA,WAAW,CAAC4B,OAAZ,CAAoBC,gBAApB;AACApC,MAAAA,QAAQ,CAACL,KAAK,CAAC0C,MAAN,CAAaJ,SAAb,CAAD,CAAR;AACAzC,MAAAA,QAAQ,CAACH,eAAe,CAAC;AAAEmC,QAAAA,OAAO,EAAG,GAAES,SAAS,CAACK,KAAM,OAAML,SAAS,CAACM,MAAO,iBAArD;AAAuEZ,QAAAA,KAAK,EAAE;AAA9E,OAAD,CAAhB,CAAR;AACD,KALD,CAKE,OAAMJ,KAAN,EAAa;AACb/B,MAAAA,QAAQ,CAACH,eAAe,CAAC;AAAEmC,QAAAA,OAAO,EAAG,oBAAmBD,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBH,KAAM,EAAzD;AAA4DI,QAAAA,KAAK,EAAE;AAAnE,OAAD,CAAhB,CAAR;AACD;AACF,GATD,CA/DgB,CA2EhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAI1B,IAAI,KAAK,IAAb,EAAmB;AACjB,wBACE;AAAA,8BAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,QAAQ,EAAEe,WAA/B;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAEb,QAHT;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,QAAQ,EAAE,CAAC;AAAEqC,cAAAA;AAAF,aAAD,KAAgBpC,WAAW,CAACoC,MAAM,CAACC,KAAR,CALvC;AAME,YAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,iCACE;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAEpC,QAHT;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,QAAQ,EAAE,CAAC;AAAEmC,cAAAA;AAAF,aAAD,KAAgBlC,WAAW,CAACkC,MAAM,CAACC,KAAR,CALvC;AAME,YAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqBE;AAAQ,UAAA,EAAE,EAAC,cAAX;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,kCAAmBxC,IAAI,CAACyC,IAAxB,eAA6B;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEd,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,UAAvB;AAAkC,MAAA,GAAG,EAAErB,WAAvC;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEwB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAYGnC,KAAK,CAAC+C,GAAN,CAAUC,IAAI,IACb9C,OAAO,CAACC,GAAR,CAAY6C,IAAZ,CADD,CAEC;AACA;AACA;AACA;AACA;AACA;AAPD;AAZH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAzKD;;GAAMrD,G;UACaJ,W,EAQHC,W;;;KATVG,G;AA2KN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n// import Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setNotification } from './reducers/notificationReducer'\nimport { initBlogs } from './reducers/blogReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    blogService\n      .getAll().then(blogs => \n        dispatch(initBlogs(blogs)))\n  }, [])\n\n  const blogz = useSelector(state => state.blogs)\n  console.log('blogz', blogz)\n  console.log('APP STATE', blogz)\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  // const [notification, setNotification] = useState(null)\n\n  const blogFormRef = React.createRef() // TODO https://fullstackopen.com/en/part5/props_children_and_proptypes#references-to-components-with-ref\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => {\n      // console.log('setblogz', blogs)\n      dispatch(initBlogs(blogs))\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser')\n    if(loggedInUser) {\n      const user = JSON.parse(loggedInUser)\n      setUser(user)\n      // setUserCheck(user.username)\n      blogService.setToken(user.token)\n    }\n    console.log(loggedInUser)\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n      blogService.setToken(user.token)\n      setUser(user)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      setUsername('')\n      setPassword('')\n    } catch(error) {\n      // notify(error.response.data.error, 'error')\n      dispatch(setNotification({ message: error.response.data.error, class: 'error' }))\n      // console.log(exception)\n    }\n  }\n\n  const handleLogout = (e) => {\n    e.preventDefault()\n    window.localStorage.removeItem('loggedInUser')\n    setUser(null)\n  }\n\n  const addBlog = async (blogObject) => {\n    try {\n      const addedBlog = await blogService.create(blogObject)\n      blogFormRef.current.visibilityToggle()\n      setBlogs(blogs.concat(addedBlog))\n      dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n    } catch(error) {\n      dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n    }\n  }\n\n\n  // const updateBlog = async (blogObject) => {\n  //   try {\n  //     console.log('updating', blogObject)\n  //     const changedBlog = await blogService.update(blogObject)\n  //     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n  //     setBlogs(response)\n  //   } catch(error) {\n  //     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n  //     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n  //     console.log(error)\n  //   }\n  // }\n\n  // const removeBlog = async (blogObject) => {\n  //   try {\n  //     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n  //       blogService.deleteBlog(blogObject.id)\n  //       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n  //       setBlogs(filteredBlogs)\n  //     }\n  //   } catch(error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  if (user === null) {\n    return (\n      <div>\n        {/* { !notification ? null : <div className={ notification.type === 'success' ? 'success' : 'error' }>{notification.message}</div> } */}\n        <Notification />\n        <h2>Login to the application</h2>\n        <form id=\"loginForm\" onSubmit={handleLogin}>\n          <div>\n            <input\n              id='username'\n              type='text'\n              value={username}\n              name='username'\n              onChange={({ target }) => setUsername(target.value)}\n              placeholder='username'\n            />\n          </div>\n          <div>\n            <input\n              id='password'\n              type='password'\n              value={password}\n              name='password'\n              onChange={({ target }) => setPassword(target.value)}\n              placeholder='password'\n            />\n          </div>\n          <button id='login-button' type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification />\n      <div>Logged in as {user.name}<button type='submit' onClick={handleLogout}>logout</button></div>\n      <h2>create new</h2>\n      <Togglable buttonLabel='new blog' ref={blogFormRef}>\n        <BlogForm createBlog={addBlog} />\n      </Togglable>\n      <div className=\"blogs\">\n        {/* {[...blogs]\n          .sort((a,b) => b.likes > a.likes ? 1 : -1)\n          .map(blog =>\n            <Blog\n              key={blog.id}\n              blog={blog}\n              // userCheck={userCheck}\n              owner={user.username === blog.user.username}\n              updateBlog={updateBlog}\n              removeBlog={removeBlog} />\n          )} */}\n        {blogz.map(blog =>\n          console.log(blog)\n          // <Blog\n          //   key={blog.id}\n          //   blog={blog}\n          //   // owner={user.username === blog.user.username}\n          //   updateBlog={updateBlog}\n          //   removeBlog={removeBlog} />\n        )}\n\n        {/*REVIEW- https://stackoverflow.com/questions/43572436/sort-an-array-of-objects-in-react-and-render-them*/}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}