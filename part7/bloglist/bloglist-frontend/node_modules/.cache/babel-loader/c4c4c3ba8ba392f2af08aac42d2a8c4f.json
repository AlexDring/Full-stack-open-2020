{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/components/Users.js\";\nimport React, { useEffect } from 'react'; // import { useSelector } from 'react-redux'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport userService from '../services/users';\nuseEffect(() => {\n  userService.getAll().then(users => console.log(users));\n}, []);\n\nconst Users = () => {\n  // const blogs = useSelector(state => state.blogs)\n  // let users = []\n  // blogs.forEach(blog => {\n  //   users = [...users, blog.user]\n  // })\n  // let countedUsers = users.reduce(function (accumulator, currentValue) {\n  //   if (currentValue.name in accumulator) {\n  //     accumulator[currentValue.name]++\n  //   }\n  //   else {\n  //     accumulator[currentValue.name] = 1\n  //   }\n  //   return accumulator\n  // }, {})\n  // console.log(countedUsers)\n  // let result = Object.keys(countedUsers).map(e => ({\n  //   name: e, count: countedUsers[e]\n  // }))\n  // console.log(result)\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"blogs created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), result.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/:id\",\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: user.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, user.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/components/Users.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","userService","getAll","then","users","console","log","Users","result","map","user","name","count"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAEUC,KAFV,QAGO,kBAHP;AAIA,OAAOC,WAAP,MAAwB,mBAAxB;AAEAL,SAAS,CAAC,MAAM;AACdK,EAAAA,WAAW,CAACC,MAAZ,GAAqBC,IAArB,CAA0BC,KAAK,IAC7BC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADF;AAGD,CAJQ,EAIP,EAJO,CAAT;;AAMA,MAAMG,KAAK,GAAG,MAAM;AAClB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGC,MAAM,CAACC,GAAP,CAAWC,IAAI,iBACd;AAAA,kCACE,QAAC,MAAD;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAA,qCACE;AAAA,0BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,gBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAhDD;;KAAMJ,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react'\n// import { useSelector } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom'\nimport userService from '../services/users'\n\nuseEffect(() => {\n  userService.getAll().then(users =>\n    console.log(users)\n  )\n},[])\n\nconst Users = () => {\n  // const blogs = useSelector(state => state.blogs)\n  // let users = []\n\n  // blogs.forEach(blog => {\n  //   users = [...users, blog.user]\n  // })\n\n  // let countedUsers = users.reduce(function (accumulator, currentValue) {\n  //   if (currentValue.name in accumulator) {\n  //     accumulator[currentValue.name]++\n  //   }\n  //   else {\n  //     accumulator[currentValue.name] = 1\n  //   }\n  //   return accumulator\n  // }, {})\n  // console.log(countedUsers)\n\n  // let result = Object.keys(countedUsers).map(e => ({\n  //   name: e, count: countedUsers[e]\n  // }))\n  // console.log(result)\n\n\n  return(\n    <Router>\n      <h1>Users</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>blogs created</th>\n          </tr>\n          {result.map(user =>\n            <tr key={user.name}>\n              <Switch>\n                <Route path='/:id'>\n                  <th>{user.name}</th>\n                </Route>\n              </Switch>\n              <th>{user.count}</th>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Router>\n  )\n}\n\nexport default Users"]},"metadata":{},"sourceType":"module"}