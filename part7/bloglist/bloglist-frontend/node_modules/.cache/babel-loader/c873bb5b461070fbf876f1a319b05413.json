{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/components/BlogList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increaseLikes, deleteBlog } from '../reducers/blogReducer'; // import Blog from './Blog'\n\nconst BlogList = ({\n  user\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const blogs = useSelector(state => state.blogs);\n\n  const byLikes = (a1, a2) => a2.likes - a1.likes; //TODO - REWRITE and understand this .sort\n\n\n  const sorted = blogs.sort(byLikes);\n  const [visibility, setVisibility] = useState(false);\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    borderWidth: 1,\n    border: 'solid',\n    marginBottom: 5\n  };\n  const hideWhenVisible = {\n    display: visibility ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visibility ? '' : 'none'\n  };\n\n  const visibilityToggle = () => {\n    setVisibility(!visibility);\n  };\n\n  const updateBlog = id => {\n    const likeID = blogs.find(blog => blog.id === id);\n    console.log(likeID);\n    dispatch(increaseLikes(likeID));\n  };\n\n  const removeBlog = id => {\n    dispatch(deleteBlog(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs\",\n    children: sorted.map(blog =>\n    /*#__PURE__*/\n    // <Blog key={blog.id} blog={blog} owner={blog.user.username===user.username} />\n    _jsxDEV(\"div\", {\n      style: blogStyle,\n      id: \"single-blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: hideWhenVisible,\n        className: \"defaultView\",\n        children: [blog.title, \" \", blog.author, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: visibilityToggle,\n          className: \"showButton\",\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: showWhenVisible,\n        className: \"hiddenView\",\n        children: [\"title: \", blog.title, \" author: \", blog.author, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: visibilityToggle,\n          children: \"hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 54\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 103\n        }, this), \"url: \", blog.url, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), \"likes: \", blog.likes, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"like-button\",\n          onClick: () => updateBlog(blog.id),\n          children: \"like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 107\n        }, this), \" \", blog.user.name, blog.user.username === user.username && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeBlog(blog.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogList, \"UQ6xKiuAxpTI+xX2o9z2Qmdx0p8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/components/BlogList.js"],"names":["React","useState","useDispatch","useSelector","increaseLikes","deleteBlog","BlogList","user","dispatch","blogs","state","byLikes","a1","a2","likes","sorted","sort","visibility","setVisibility","blogStyle","paddingTop","paddingLeft","borderWidth","border","marginBottom","hideWhenVisible","display","showWhenVisible","visibilityToggle","updateBlog","id","likeID","find","blog","console","log","removeBlog","map","title","author","url","name","username"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { increaseLikes, deleteBlog } from '../reducers/blogReducer'\n// import Blog from './Blog'\n\nconst BlogList = ({ user }) => {\n  const dispatch = useDispatch()\n\n  const blogs = useSelector(state => state.blogs)\n  const byLikes = (a1, a2) => a2.likes - a1.likes //TODO - REWRITE and understand this .sort\n  const sorted = blogs.sort(byLikes)\n  const [visibility, setVisibility] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    borderWidth: 1,\n    border: 'solid',\n    marginBottom: 5\n  }\n  const hideWhenVisible = { display: visibility ? 'none' : '' }\n  const showWhenVisible = { display: visibility ? '' : 'none' }\n\n  const visibilityToggle = () => {\n    setVisibility(!visibility)\n  }\n\n  const updateBlog = (id) => {\n    const likeID = blogs.find(blog => blog.id === id)\n    console.log(likeID)\n    dispatch(increaseLikes(likeID))\n  }\n\n  const removeBlog = (id) => {\n    dispatch(deleteBlog(id))\n  }\n\n  return (\n    <div className=\"blogs\">\n      {sorted.map(blog =>\n        // <Blog key={blog.id} blog={blog} owner={blog.user.username===user.username} />\n        <div key={blog.id} style={blogStyle} id='single-blog'>\n          <div style={hideWhenVisible} className='defaultView'>\n            {blog.title} {blog.author}\n            <button onClick={visibilityToggle} className='showButton'>show</button>\n          </div>\n          <div style={showWhenVisible} className='hiddenView'>\n            title: {blog.title} author: {blog.author}<button onClick={visibilityToggle}>hide</button> <br />\n            url: {blog.url} <br />\n            likes: {blog.likes} <button id='like-button' onClick={() => updateBlog(blog.id)}>like</button><br /> {/* // TODO LOOK AT THIS TOMORROW - how does it get the clicked id how is it passed in?? */}\n            {blog.user.name}\n            {/* {owner && <button onClick={() => removeBlog(blog)}>delete</button>} */}\n            {blog.user.username===user.username && <button onClick={() => removeBlog(blog.id)}>delete</button>}{/* // TODO BUG - why does this disappear when like is clicked */}\n          </div>\n        </div>\n      )}\n    </div>\n  )}\n\nexport default BlogList"]},"metadata":{},"sourceType":"module"}