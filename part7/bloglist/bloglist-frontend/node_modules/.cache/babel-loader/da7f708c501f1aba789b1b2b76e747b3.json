{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Users from './components/Users';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm'; // import Logout from './components/Logout'\n\nimport User from './components/User';\nimport Blog from './components/Blog';\nimport { initBlogs } from './reducers/blogReducer';\nimport { initUsers } from './reducers/usersReducer';\nimport { loadUser, userLogout } from './reducers/loginReducer'; // import userService from './services/users'\n\nimport { Container, AppBar, Toolbar, IconButton, Button, makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  homeContent: {\n    padding: theme.spacing(8, 0, 6)\n  }\n}));\n\nconst App = () => {\n  _s();\n\n  // const [users, setUsers] = useState()\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(state => state.loggedIn);\n  const blogs = useSelector(state => state.blogs);\n  const users = useSelector(state => state.users);\n  const classes = useStyles();\n  console.log(users);\n  useEffect(() => {\n    dispatch(initBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(initUsers());\n  }, []); // useEffect(() => {\n  //   userService.getAll().then(users =>\n  //     setUsers(users))\n  // }, [])\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser');\n\n    if (loggedInUser) {\n      const parsed = JSON.parse(loggedInUser);\n      dispatch(loadUser(parsed));\n    }\n  }, []);\n  console.log(loggedIn);\n\n  const handleLogout = e => {\n    e.preventDefault();\n    window.localStorage.removeItem('loggedInUser');\n    dispatch(userLogout());\n  };\n\n  const loginDetails = {\n    marginLeft: 'auto'\n  };\n\n  if (loggedIn === null) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.homeContent,\n        children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          component: Link,\n          to: \"/\",\n          children: \"blogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          component: Link,\n          to: \"/users\",\n          children: \"users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: loginDetails,\n          children: [loggedIn.name, \" logged in \", /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            type: \"submit\",\n            onClick: handleLogout,\n            children: \"logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.homeContent,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/users/:id\",\n              children: /*#__PURE__*/_jsxDEV(User, {\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/users\",\n              children: /*#__PURE__*/_jsxDEV(Users, {\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/blogs/:id\",\n              children: /*#__PURE__*/_jsxDEV(Blog, {\n                blogs: blogs,\n                user: loggedIn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Home, {\n                user: loggedIn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"E5vz2af0BmIFUQOC+BmP5UnQTRo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useStyles];\n});\n\n_c = App;\nexport default App; // const handleLogin = async (event) => {\n//   event.preventDefault()\n//   console.log('Form Login', username, password)\n//   try {\n//     const user = await loginService.login({\n//       username, password\n//     })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n//     blogService.setToken(user.token)\n//     setUser(user)\n//     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n//     setUsername('')\n//     setPassword('')\n//   } catch(error) {\n//     // notify(error.response.data.error, 'error')\n//     dispatch(setNotification({ message: error.response.data.error, class: 'error' }))\n//   }\n// }\n// const addBlog = async (blogObject) => {\n//   try {\n//     const addedBlog = await blogService.create(blogObject)\n//     blogFormRef.current.visibilityToggle()\n//     setBlogs(blogs.concat(addedBlog))\n//     dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n//   } catch(error) {\n//     dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n//   }\n// }\n// const updateBlog = async (blogObject) => {\n//   try {\n//     console.log('updating', blogObject)\n//     const changedBlog = await blogService.update(blogObject)\n//     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n//     setBlogs(response)\n//   } catch(error) {\n//     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n//     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n//     console.log(error)\n//   }\n// }\n// const removeBlog = async (blogObject) => {\n//   try {\n//     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n//       blogService.deleteBlog(blogObject.id)\n//       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n//       setBlogs(filteredBlogs)\n//     }\n//   } catch(error) {\n//     console.log(error)\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Switch","Route","Link","Home","Users","Notification","LoginForm","User","Blog","initBlogs","initUsers","loadUser","userLogout","Container","AppBar","Toolbar","IconButton","Button","makeStyles","useStyles","theme","homeContent","padding","spacing","App","dispatch","loggedIn","state","blogs","users","classes","console","log","loggedInUser","localStorage","getItem","parsed","JSON","parse","handleLogout","e","preventDefault","window","removeItem","loginDetails","marginLeft","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Link } from 'react-router-dom'\n\nimport Home from './components/Home'\nimport Users from './components/Users'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\n// import Logout from './components/Logout'\nimport User from './components/User'\nimport  Blog from './components/Blog'\n\nimport { initBlogs } from './reducers/blogReducer'\nimport { initUsers } from './reducers/usersReducer'\nimport { loadUser, userLogout } from './reducers/loginReducer'\n// import userService from './services/users'\nimport { Container, AppBar, Toolbar, IconButton, Button, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  homeContent: {\n    padding: theme.spacing(8, 0, 6)\n  }\n}))\n\nconst App = () => {\n  // const [users, setUsers] = useState()\n  const dispatch = useDispatch()\n  const loggedIn = useSelector(state => state.loggedIn)\n  const blogs = useSelector(state => state.blogs)\n  const users = useSelector(state => state.users)\n  const classes = useStyles()\n\n  console.log(users)\n\n  useEffect(() => {\n    dispatch(initBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initUsers())\n  }, [])\n\n  // useEffect(() => {\n  //   userService.getAll().then(users =>\n  //     setUsers(users))\n  // }, [])\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser')\n    if(loggedInUser) {\n      const parsed = JSON.parse(loggedInUser)\n      dispatch(loadUser(parsed))\n    }\n  }, [])\n  console.log(loggedIn)\n\n  const handleLogout = (e) => {\n    e.preventDefault()\n    window.localStorage.removeItem('loggedInUser')\n    dispatch(userLogout())\n  }\n\n  const loginDetails = {\n    marginLeft: 'auto'\n  }\n\n  if (loggedIn === null) {\n    return (\n      <Container>\n        <div className={classes.homeContent}>\n          <Notification />\n          <LoginForm />\n        </div>\n      </Container>\n    )\n  }\n  return (\n    <>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          </IconButton>\n          <Button color=\"inherit\" component={Link} to=\"/\">\n            blogs\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/users\">\n            users\n          </Button>\n          <em style={loginDetails}>{loggedIn.name} logged in <Button color=\"inherit\"  type='submit' onClick={handleLogout}>logout</Button></em>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <div className={classes.homeContent}>\n          <Container>\n            <Notification />\n            {/* <Logout name={loggedIn.name} /> */}\n            <Switch>\n              <Route path='/users/:id'>\n                <User users={users} />\n              </Route>\n              <Route path='/users'>\n                <Users users={users} />\n              </Route>\n              <Route path='/blogs/:id'>\n                <Blog blogs={blogs} user={loggedIn} />\n              </Route>\n              <Route path='/' >\n                <Home user={loggedIn} />\n              </Route>\n            </Switch>\n          </Container>\n        </div>\n      </main>\n    </>)\n}\n\nexport default App\n\n\n// const handleLogin = async (event) => {\n//   event.preventDefault()\n//   console.log('Form Login', username, password)\n//   try {\n//     const user = await loginService.login({\n//       username, password\n//     })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n//     blogService.setToken(user.token)\n//     setUser(user)\n//     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n//     setUsername('')\n//     setPassword('')\n//   } catch(error) {\n//     // notify(error.response.data.error, 'error')\n//     dispatch(setNotification({ message: error.response.data.error, class: 'error' }))\n//   }\n// }\n\n\n// const addBlog = async (blogObject) => {\n//   try {\n//     const addedBlog = await blogService.create(blogObject)\n//     blogFormRef.current.visibilityToggle()\n//     setBlogs(blogs.concat(addedBlog))\n//     dispatch(setNotification({ message: `${addedBlog.title} by ${addedBlog.author} has been added`, class: 'success' }))\n//   } catch(error) {\n//     dispatch(setNotification({ message: `blog not added - ${error.response.data.error}`, class: 'error' }))\n//   }\n// }\n\n\n// const updateBlog = async (blogObject) => {\n//   try {\n//     console.log('updating', blogObject)\n//     const changedBlog = await blogService.update(blogObject)\n//     const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n//     setBlogs(response)\n//   } catch(error) {\n//     // notify(`blog not changed - ${error.response.data.error}`, 'error')\n//     dispatch(setNotification({ message: `blog not changed - ${error.response.data.error}`, class: 'error' }))\n//     console.log(error)\n//   }\n// }\n\n// const removeBlog = async (blogObject) => {\n//   try {\n//     if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n//       blogService.deleteBlog(blogObject.id)\n//       const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n//       setBlogs(filteredBlogs)\n//     }\n//   } catch(error) {\n//     console.log(error)\n//   }\n// }"]},"metadata":{},"sourceType":"module"}