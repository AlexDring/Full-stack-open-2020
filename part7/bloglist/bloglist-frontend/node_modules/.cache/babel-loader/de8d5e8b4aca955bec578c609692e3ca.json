{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [visibility, setVisibility] = useState(false);\n  const [userCheck, setUserCheck] = useState('');\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser');\n\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      setUser(user);\n      setUserCheck(user.username);\n      blogService.setToken(user.token);\n    }\n\n    console.log(loggedInUser);\n  }, []);\n  console.log('test', userCheck);\n  console.log('test', user);\n\n  const notify = (message, type = 'success') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      }); // this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n\n      blogService.setToken(user.token);\n      setUser(user);\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user));\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      notify(error.response.data.error, 'error'); // console.log(exception)\n    }\n  };\n\n  const handleLogout = e => {\n    e.preventDefault();\n    window.localStorage.removeItem('loggedInUser');\n    setUser(null);\n  };\n\n  const addBlog = async blogObject => {\n    try {\n      const addedBlog = await blogService.create(blogObject); // console.log(addedBlog)\n\n      setBlogs(blogs.concat(addedBlog));\n      notify(`${addedBlog.title} by ${addedBlog.author} has been added`, 'success');\n      setVisibility(!visibility);\n    } catch (error) {\n      notify(`blog not added - ${error.response.data.error}`, 'error');\n    }\n  };\n\n  const updateBlog = async blogObject => {\n    try {\n      console.log('updating', blogObject);\n      const changedBlog = await blogService.update(blogObject);\n      const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog);\n      setBlogs(response);\n    } catch (error) {\n      notify(`blog not changed - ${error.response.data.error}`, 'error');\n      console.log(error);\n    }\n  };\n\n  const removeBlog = async blogObject => {\n    try {\n      if (window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n        blogService.deleteBlog(blogObject.id);\n        const filteredBlogs = blogs.filter(blog => blog.id !== blogObject.id);\n        setBlogs(filteredBlogs);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!notification ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: notification.type === 'success' ? 'success' : 'error',\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to the application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginForm\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            name: \"username\",\n            onChange: ({\n              target\n            }) => setUsername(target.value),\n            placeholder: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            name: \"password\",\n            onChange: ({\n              target\n            }) => setPassword(target.value),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-button\",\n          type: \"submit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), !notification ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: notification.type === 'success' ? 'success' : 'error',\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Logged in as \", user.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleLogout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new blog\",\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        createBlog: addBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: [...blogs].sort((a, b) => b.likes > a.likes ? 1 : -1).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        userCheck: userCheck,\n        updateBlog: updateBlog,\n        removeBlog: removeBlog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lhDQtKMYht3SEYrQPVWmmpcCy/8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexdring/Documents/fullstackopen/part0-part9-excercises/part7/bloglist/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","blogService","loginService","Blog","BlogForm","Togglable","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","setNotification","visibility","setVisibility","userCheck","setUserCheck","getAll","then","loggedInUser","localStorage","getItem","JSON","parse","setToken","token","console","log","notify","message","type","setTimeout","handleLogin","event","preventDefault","login","window","setItem","stringify","error","response","data","handleLogout","e","removeItem","addBlog","blogObject","addedBlog","create","concat","title","author","updateBlog","changedBlog","update","map","blog","id","removeBlog","confirm","deleteBlog","filteredBlogs","filter","target","value","name","sort","a","b","likes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n  const [visibility, setVisibility] = useState(false)\n  const [userCheck, setUserCheck] = useState('')\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('loggedInUser')\n    if(loggedInUser) {\n      const user = JSON.parse(loggedInUser)\n      setUser(user)\n      setUserCheck(user.username)\n      blogService.setToken(user.token)\n    }\n    console.log(loggedInUser)\n  }, [])\n\n  console.log('test', userCheck)\n  console.log('test', user)\n\n\n  const notify = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })// this gets routed through services/login.js to the backend where the credentials are checked. If ok the username, name and token are stored in the user state.\n      blogService.setToken(user.token)\n      setUser(user)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      setUsername('')\n      setPassword('')\n    } catch(error) {\n      notify(error.response.data.error, 'error')\n      // console.log(exception)\n    }\n  }\n\n  const handleLogout = (e) => {\n    e.preventDefault()\n    window.localStorage.removeItem('loggedInUser')\n    setUser(null)\n  }\n\n  const addBlog = async (blogObject) => {\n    try {\n      const addedBlog = await blogService.create(blogObject)\n      // console.log(addedBlog)\n      setBlogs(blogs.concat(addedBlog))\n      notify(`${addedBlog.title} by ${addedBlog.author} has been added`, 'success')\n      setVisibility(!visibility)\n    } catch(error) {\n      notify(`blog not added - ${error.response.data.error}`, 'error')\n    }\n  }\n\n\n  const updateBlog = async (blogObject) => {\n    try {\n      console.log('updating', blogObject)\n      const changedBlog = await blogService.update(blogObject)\n      const response = blogs.map(blog => blog.id === blogObject.id ? changedBlog : blog )\n      setBlogs(response)\n    } catch(error) {\n      notify(`blog not changed - ${error.response.data.error}`, 'error')\n      console.log(error)\n    }\n  }\n\n  const removeBlog = async (blogObject) => {\n    try {\n      if(window.confirm(`remove ${blogObject.title} by ${blogObject.author}?`)) {\n        blogService.deleteBlog(blogObject.id)\n        const filteredBlogs = blogs.filter((blog) => blog.id !== blogObject.id)\n        setBlogs(filteredBlogs)\n      }\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n\n\n  if (user === null) {\n    return (\n      <div>\n        { !notification ? null : <div className={ notification.type === 'success' ? 'success' : 'error' }>{notification.message}</div> }\n        <h2>Login to the application</h2>\n        <form id=\"loginForm\" onSubmit={handleLogin}>\n          <div>\n            <input\n              id='username'\n              type='text'\n              value={username}\n              name='username'\n              onChange={({ target }) => setUsername(target.value)}\n              placeholder='username'\n            />\n          </div>\n          <div>\n            <input\n              id='password'\n              type='password'\n              value={password}\n              name='password'\n              onChange={({ target }) => setPassword(target.value)}\n              placeholder='password'\n            />\n          </div>\n          <button id='login-button' type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      { !notification\n        ? null\n        : <div className={ notification.type === 'success' ? 'success' : 'error' }>\n          {notification.message}\n        </div> }\n      <div>Logged in as {user.name}<button type='submit' onClick={handleLogout}>logout</button></div>\n      <h2>create new</h2>\n      <Togglable buttonLabel='new blog'>\n        <BlogForm createBlog={addBlog} />\n      </Togglable>\n      <div className=\"blogs\">\n        {[...blogs]\n          .sort((a,b) => b.likes > a.likes ? 1 : -1)\n          .map(blog =>\n            <Blog key={blog.id} blog={blog} userCheck={userCheck} updateBlog={updateBlog} removeBlog={removeBlog} />\n          )}\n        {/*REVIEW- https://stackoverflow.com/questions/43572436/sort-an-array-of-objects-in-react-and-render-them*/}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}